<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Timetable</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="main.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    table {
      animation: slideInUp 1s ease-out;
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    th, td {
      padding: 12px;
      text-align: center;
      border: 1px solid #ddd;
    }

    th {
      background-color: #343a40;
      color: white;
    }

    tbody tr:hover {
      background-color: #f1f1f1;
      transition: background-color 0.3s ease;
    }

    td {
      position: relative;
      transition: transform 0.2s ease;
    }

    td:hover {
      transform: scale(1.05);
    }

    td::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.1);
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    td:hover::before {
      opacity: 1;
    }

    .chart-container {
      max-width: 600px;
  margin: auto;
  overflow-x: auto;
    }
 #semesterForm {
      width: 180px; /* Adjust the width as needed */
    }
  </style>
</head>

<body>
  <%- include('NavBar.ejs') -%>
  <div id="wrapper">
    <%- include('SideBar.ejs') -%>

    <div id="page-content-wrapper">
      <div id="Load">
        <h2 class="text-white">Timetable</h2>

        
          <div class="mb-3">
            <form id="semesterForm" action="/courseLoad" method="POST">
              <select id="semesterSelect" class="form-select" name="value">
                <option value="Fall 2024">Select a semester</option>
                <option value="Spring 2025">Spring 2025</option>
                <option value="Fall 2024">Fall 2024</option>
                <option value="Spring 2024">Spring 2024</option>
                <option value="Summer 2024">Summer 2024</option>
                <option value="Fall 2023">Fall 2023</option>
                <option value="Spring 2023">Spring 2023</option>
                <option value="Summer 2023">Summer 2023</option>
              </select>
            </form>
            <label id="selectedSemester" class="form-label mt-2"></label>
          </div>
         <% if(data != 0) { %>
            <h6>Timetable for Semester: <%=data[0].Semester %></h6>
          <% } %>
        <div class="table-responsive">
          <table class="table table-bordered border-dark">
            <thead class="table-dark">
              <tr>
                <th>Time</th>
                <th>Monday</th>
                <th>Tuesday</th>
                <th>Wednesday</th>
                <th>Thursday</th>
                <th>Friday</th>
              </tr>
            </thead>
            <tbody>
              <% const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']; %>
              <% const timeSlots = [...new Set(data.map(course => course.Time))].sort((a, b) => {
                const parseTime = time => {
                  const [hour] = time.split('-').map(Number);
                  return hour <= 6 ? hour + 12 : hour; // Adjust for the afternoon times
                };
                return parseTime(a) - parseTime(b);
              }); %>

              <% timeSlots.forEach(slot => { %>
                <tr>
                  <td><%= slot %></td>
                  <% daysOfWeek.forEach(day => { %>
                    <% const coursesForSlot = data.filter(course => course.Days.includes(day) && course.Time === slot); %>
                    <td>
                      <% if (coursesForSlot.length > 0) { %>
                        <% coursesForSlot.forEach(course => { %>
                          <div>
                            <strong><%= course.CourseCode %></strong><br>
                            <%= course.FName %> <%= course.LName %><br>
                            <%= course.Room %>
                           
                          </div>
                        <% }); %>
                      <% } else { %>
                        <div>No course scheduled</div>
                      <% } %>
                    </td>
                  <% }); %>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>

      <div class="container mt-5 chart-container">
        <h2 class="text-white">Courses Chart</h2>
        <div style="width: 1000px;"> <!-- Adjust width to fit the chart -->
          <canvas id="courseLoadChart"></canvas>
        </div>
      </div>
  </div>

  <script src="sidebar.js"></script>
  <script>
    // Automatically submit form when semester is selected
    document.getElementById('semesterSelect').addEventListener('change', function() {
      document.getElementById('semesterForm').submit();
    });

    // Display the selected semester on label
    const semesterSelect = document.getElementById('semesterSelect');
    const selectedSemesterLabel = document.getElementById('selectedSemester');

    function updateSelectedSemesterLabel() {
      const selectedSemester = semesterSelect.options[semesterSelect.selectedIndex].text;
 }

    semesterSelect.addEventListener('change', updateSelectedSemesterLabel);

    // Initial update of the label
    updateSelectedSemesterLabel();

    // Chart initialization code
    const courseData = <%- JSON.stringify(data) %>;
    const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];
    const courseCount = daysOfWeek.map(day => courseData.filter(course => course.Days.includes(day)).length);

    const ctx = document.getElementById('courseLoadChart').getContext('2d');
    const courseLoadChart = new Chart(ctx, {
      type: 'bar',
      data: {
        labels: daysOfWeek,
        datasets: [{
          label: 'Number of Courses',
          data: courseCount,
          backgroundColor: 'rgba(75, 192, 192, 0.2)',
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 2
        }]
      },
      options: {
      scales: {
        y: {
          beginAtZero: true,
          max: 7,
          ticks: {
            stepSize: 1,
            color: 'black' // Set the color of the y-axis labels
          }
        },
        x: {
          ticks: {
            color: 'black' // Set the color of the x-axis labels
          }
        }
      },
    
    plugins: {
        legend: {
          labels: {
            color: 'black' // Set the color of the legend labels
          }
        }
      }
    },
  });
</script>
</script>
</body>
</html>
