<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Transcript</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

  <link href="main.css" rel="stylesheet">
  <style>
    .semester-widget {
      margin-bottom: 20px;
      padding: 15px;
      background-color: #f8f9fa;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .semester-widget:hover {
      transform: scale(1.03);
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    .semester-heading {
      font-size: 1.5rem;
      margin-bottom: 10px;
      color: #333;
    }
  </style>
</head>

<body>

  <%- include('NavBar.ejs') -%>
    <div id="wrapper">
      <%- include('SideBar.ejs') -%>

        <div id="page-content-wrapper">
          <div id="Transcript">
            <h2 class="text-white">Transcript</h2>
            <div class="container mt-5">
              <div>
                <% const semesters={}; data.transcript.forEach(course=> {
                  if (!semesters[course.Semester]) {
                  semesters[course.Semester] = [];
                  }
                  semesters[course.Semester].push(course);
                  });
                  %>

                  <% for (let semester in semesters) { %>
                    <div class="semester-widget">
                      <div class="semester-heading">
                        <%= semester %>
                      </div>
                      <table class="table">
                        <thead>
                          <tr>
                            <th>Course Code</th>
                            <th>Credits</th>
                            <th>Grade</th>
                          </tr>
                        </thead>
                        <tbody>
                          <% semesters[semester].forEach(course=> { %>
                            <tr>
                              <td>
                                <%= course.CourseCode %>
                              </td>
                              <td>
                                <%= course.Credits %>
                              </td>
                              <td>
                                <%= course.Grade %>
                              </td>
                            </tr>
                            <% }) %>
                        </tbody>
                      </table>
                      <h6>GPA: <span class="semester-gpa" data-semester="<%= semester %>">Calculating...</span></h6>
                      <% if (semester === 'Spring 2024') { %>
                        <h4 class="mt-4">Cumulative GPA: <span id="gpa-display">
                          <%= data.gpa %>
                        </span></h4>
                      <% } %>
                    </div>
                    <% } %>
              </div>
            </div>

          <!-- Hidden element to store JSON data -->
          <div id="semester-data" data-semesters='<%= JSON.stringify(semesters) %>' style="display: none;"></div>

          <script>

            function calculateSemesterGPA(courses) {
              let totalCredits = 0;
              let totalQualityPoints = 0;

              courses.forEach(course => {
                const credits = course.Credits;
                const grade = course.Grade;

                let gradePoint;
                switch (grade.toUpperCase()) {
                  case 'A+':
                    gradePoint = 4.0;
                    break;
                  case 'A':
                    gradePoint = 4.0;
                    break;
                  case 'A-':
                    gradePoint = 3.7;
                    break;
                  case 'B+':
                    gradePoint = 3.3;
                    break;
                  case 'B':
                    gradePoint = 3.0;
                    break;
                  case 'B-':
                    gradePoint = 2.7;
                    break;
                  case 'C+':
                    gradePoint = 2.3;
                    break;
                  case 'C':
                    gradePoint = 2.0;
                    break;
                  case 'C-':
                    gradePoint = 1.7;
                    break;
                  case 'D+':
                    gradePoint = 1.3;
                    break;
                  case 'D':
                    gradePoint = 1.0;
                    break;
                  case 'D-':
                    gradePoint = 0.7;
                    break;
                  case 'F':
                    gradePoint = 0.0;
                    break;
                  default:
                    gradePoint = 0.0;
                    break;
                }

                const qualityPoints = credits * gradePoint;

                totalCredits += credits;
                totalQualityPoints += qualityPoints;
              });

              const gpa = totalQualityPoints / totalCredits;
              return gpa.toFixed(2);
            }

            $(document).ready(function () {
              // Retrieve and parse the JSON data
              const semesters = JSON.parse($('#semester-data').attr('data-semesters'));

              $('.semester-widget').each(function () {
                const semester = $(this).find('.semester-heading').text().trim();
                const courses = semesters[semester];

                if (courses) {
                  const semesterGPA = calculateSemesterGPA(courses);
                  $(this).find('.semester-gpa').text(semesterGPA);
                }
              });
            });
          </script>
        </div>
    </div>
</body>

</html>
